function isRealPokemon(e, o) {
    for (var n = 0; n < o.length; n++)if (o[n].toLowerCase() === e.toLowerCase())return !0;
    return !1
}
function hidePoke(e) {
    var o = e.parentNode.parentNode, n = o.parentNode;
    n.removeChild(o)
}
function containsPoke(e, o, n) {
    for (var a = 0; a < window._pokes.length; a++) {
        var t = window._pokes[a];
        if (t.name === e && t.lat === o && t.lon === n)return !0
    }
    return !1
}
function isFiltered(e, o, n) {
    return "all" !== e && ("0" === e ? !o : "90" === e ? !(o && n >= 90) : void 0)
}
function addPokeToList(e, o, n) {
    var a = e.cloneNode(!0), t = o.firstChild;
    a.removeAttribute("id"), a.style.display = "", a.dataset.time = new Date;
    var r = n.name;
    var cleanname = r.replace(".","");
    cleanname = cleanname.replace("'","");
    null !== n.IV && (r += " (" + n.IV + "%)"),
        a.querySelector("img.pokemon-image").src = "images/" + n.name.replace(/[^\w]/g, "").toLowerCase() + ".png",
        a.querySelector(".poke-name-title").innerText = r,
        a.querySelector("p.coords").innerText = n.lat + ", " + n.lon,
        a.querySelector(".actual-sniping-link").setAttribute("href", "pokesniper2://" + cleanname + "/" + n.lat + "," + n.lon),
        Tipped.create(a.querySelector("p.coords"), "Copied!", {
        position: "topleft",
        showOn: "click",
        showDelay: 0
    });
    var i = null !== n.IV, l = i ? parseInt(n.IV) : 0;
    a.dataset.iv_type = i ? l >= 90 ? 90 : 1 : 0, isFiltered(window._filter, i, l) && (a.style.display = "none"), o.insertBefore(a, t), window._pokes.unshift(n), setTimeout(function () {
        a.style.opacity = 1
    }, 100)
}
function removeOldEntries(e, o) {
    if (window._pokes.length > o)for (var n = e.childNodes.length - 1; n > o; n--) {
        var a = e.childNodes[n];
        e.removeChild(a), window._pokes.pop()
    }
}
function changeFilter(e) {
    window._filter = e;
    for (var o = document.getElementsByClassName("poke"), n = 0; n < o.length; n++) {
        var a = $(o[n]), t = a.find(".poke-name-title")[0].innerText.indexOf("%") > -1, r = t ? parseInt(a.find(".poke-name-title")[0].innerText.match(/\(([^)%]+)%\)/)[1]) : 0;
        isFiltered(window._filter, t, r) ? a.css("display", "none") : a.css("display", "")
    }
}
window._pokes = window._pokes || [], window._filter = window._filter || "all";
var max_entries = 50, domain = "pokemongoivclub.com", port = 49002;
!function () {
    if (new Clipboard(".coords", {
            text: function (e) {
                return e.innerText
            }
        }), "undefined" == typeof io)return void window.alert("Error: the data server is down. Please try again later.");
    var e = io("http://" + domain + ":" + port), o = document.getElementById("skeleton"), n = document.getElementsByClassName("poke-list")[0];
    $("#filter").on("change", function () {
        changeFilter($(this).val())
    }), e.on("helo", function (e) {
        e.reverse().forEach(function (e) {
            isRealPokemon(e.name, pokemon) && !containsPoke(e.name, e.lat, e.lon) && addPokeToList(o, n, e)
        })
    }), e.on("poke", function (e) {
        isRealPokemon(e.name, pokemon) && !containsPoke(e.name, e.lat, e.lon) && addPokeToList(o, n, e), removeOldEntries(n, max_entries)
    })
}();
var pokemon = ["Bulbasaur", "Ivysaur", "Venusaur", "Charmander", "Charmeleon", "Charizard", "Squirtle", "Wartortle", "Blastoise", "Caterpie", "Metapod", "Butterfree", "Weedle", "Kakuna", "Beedrill", "Pidgey", "Pidgeotto", "Pidgeot", "Rattata", "Raticate", "Spearow", "Fearow", "Ekans", "Arbok", "Pikachu", "Raichu", "Sandshrew", "Sandslash", "NidoranF", "Nidorina", "Nidoqueen", "NidoranM", "Nidorino", "Nidoking", "Clefairy", "Clefable", "Vulpix", "Ninetales", "Jigglypuff", "Wigglytuff", "Zubat", "Golbat", "Oddish", "Gloom", "Vileplume", "Paras", "Parasect", "Venonat", "Venomoth", "Diglett", "Dugtrio", "Meowth", "Persian", "Psyduck", "Golduck", "Mankey", "Primeape", "Growlithe", "Arcanine", "Poliwag", "Poliwhirl", "Poliwrath", "Abra", "Kadabra", "Alakazam", "Machop", "Machoke", "Machamp", "Bellsprout", "Weepinbell", "Victreebel", "Tentacool", "Tentacruel", "Geodude", "Graveler", "Golem", "Ponyta", "Rapidash", "Slowpoke", "Slowbro", "Magnemite", "Magneton", "Farfetch'd", "Farfetchd", "Doduo", "Dodrio", "Seel", "Dewgong", "Grimer", "Muk", "Shellder", "Cloyster", "Gastly", "Haunter", "Gengar", "Onix", "Drowzee", "Hypno", "Krabby", "Kingler", "Voltorb", "Electrode", "Exeggcute", "Exeggcutor", "Cubone", "Marowak", "Hitmonlee", "Hitmonchan", "Lickitung", "Koffing", "Weezing", "Rhyhorn", "Rhydon", "Chansey", "Tangela", "Kangaskhan", "Horsea", "Seadra", "Goldeen", "Seaking", "Staryu", "Starmie", "Mr. Mime", "Scyther", "Jynx", "Electabuzz", "Magmar", "Pinsir", "Tauros", "Magikarp", "Gyarados", "Lapras", "Ditto", "Eevee", "Vaporeon", "Jolteon", "Flareon", "Porygon", "Omanyte", "Omastar", "Kabuto", "Kabutops", "Aerodactyl", "Snorlax", "Articuno", "Zapdos", "Moltres", "Dratini", "Dragonair", "Dragonite", "Mewtwo", "Mew"];